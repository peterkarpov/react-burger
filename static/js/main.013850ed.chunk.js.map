{"version":3,"sources":["components/AppHeader/AppHeader.tsx","components/BurgerIngredientListItem/BurgerIngredientListItem.tsx","components/BurgerIngredients/BurgerIngredients.tsx","components/BurgerConstructor/BurgerConstructor.tsx","components/IngredientDetails/IngredientDetails.tsx","components/ModalOverlay/ModalOverlay.tsx","components/Modal/Modal.tsx","images/order accpeted/popup/done.png","components/OrderDetails/OrderDetails.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx","components/BurgerConstructor/BurgerConstructor.module.css","components/OrderDetails/OrderDetails.module.css","components/Modal/Modal.module.css","css/scrollable.module.css","components/IngredientDetails/IngredientDetails.module.css","components/ModalOverlay/ModalOverlay.module.css","components/BurgerIngredients/BurgerIngredients.module.css","components/AppHeader/AppHeader.module.css"],"names":["styleForHeaderWrapper","width","marginLeft","marginRight","AppHeader","className","styles","style","type","BurgerIngredientListItem","props","count","size","alt","src","item","image","price","name","BurgerIngredients","state","current","currentItems","setCurrent","value","setState","Array","from","data","filter","v","i","a","getUnicleType","map","indexOf","getItemsByType","getSelectedCountById","id","selectedIngredientsId","length","getQuantityCountById","quantityData","find","quantity","getTitleByType","title","onClickOnItem","addIngredient","_id","tab","Fragment","active","onClick","stylesScrollable","scrollable","this","items","React","Component","BurgerConstructor","ingredientItems","val","bunList","ingredientList","total","reduce","previousValue","currentValue","removeIngredient","isLocked","text","thumbnail","handleClose","justifyContent","bottom","undefined","orderData","orderNumber","Math","floor","random","completeCheckout","IngredientDetails","element","image_large","calories","proteins","fat","carbohydrates","ModalOverlay","children","Modal","closeModal","e","stopPropagation","code","currentTarget","target","includes","onCloseModalCallback","enable","bind","document","addEventListener","removeEventListener","modalRoot","getElementById","ReactDOM","createPortal","OrderDetails","orderInfo","orderAccpeted","App","newQuantityData","chosenIngredient","x","push","idForPopup","index","splice","setIdForPopup","getIngredientById","clearIdForPopup","setOrderInfo","clearOrderInfo","defaultIngredients","defaultBunIngredientId","mainWrapperStyle","display","gap","json","result","fetch","then","res","ok","Promise","reject","status","defaultSelectedIngredientsId","error","console","log","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.013850ed.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n    Logo,\r\n    BurgerIcon,\r\n    ProfileIcon,\r\n    ListIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './AppHeader.module.css';\r\n\r\nconst styleForHeaderWrapper = {\r\n    width: 'calc(var(--offset-base-size) * 320)',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto'\r\n}\r\n\r\nfunction AppHeader() {\r\n\r\n    return (\r\n        <header className={styles[\"app-header\"] + \" pt-4 pb-4\"}>\r\n\r\n            <div className={styles[\"wrapper\"]} style={styleForHeaderWrapper}>\r\n\r\n                <ul className={styles[\"navigation-bar\"]}>\r\n                    <li className={styles[\"navigation-link\"] + \" p-5\"}>\r\n                        <BurgerIcon type=\"primary\" />\r\n                        <span className={styles[\"navigation-text\"] + \" text text_type_main-default ml-2\"} >Конструктор</span>\r\n                    </li>\r\n                    <li className={styles[\"navigation-link\"] + \" p-5\"}>\r\n                        <ListIcon type=\"secondary\" />\r\n                        <span className={styles[\"navigation-text\"] + \" text text_type_main-default text_color_inactive ml-2\"} >Лента заказов</span>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div className={styles[\"logo-wrapper\"]}>\r\n                    <Logo />\r\n                </div>\r\n\r\n                <ul className={styles[\"navigation-bar\"]}>\r\n                    <li className={styles[\"navigation-link\"] + \" p-5\"}>\r\n                        <ProfileIcon type=\"secondary\" />\r\n                        <span className={styles[\"navigation-text\"] + \" text text_type_main-default text_color_inactive ml-2\"} >Личный кабинет</span>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default AppHeader;","import IDataItem from '../Interfaces/IDataItem';\r\n\r\nimport {\r\n    Counter,\r\n    CurrencyIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from '../BurgerIngredients/BurgerIngredients.module.css';\r\n\r\nfunction BurgerIngredientListItem(props: {\r\n    item: IDataItem,\r\n    quantity: number,\r\n    count: number,\r\n    onClickOnItem: (item: IDataItem) => void\r\n}) {\r\n\r\n    return (\r\n        <>\r\n            <div className={styles[\"counter-wrapper\"]}>\r\n                {props.count > 0 ?\r\n                    <Counter count={props.count} size=\"default\" />\r\n                    : null}\r\n            </div>\r\n\r\n            {/* TODO сначала не понял для чего нужен счетчик, думал это количество выбранных элементов, а оказалось количество оставшихся */}\r\n            {/* <div className=\"counter-wrapper counter-wrapper-left\">\r\n                    {props.quantity > 0 ? \r\n                        <Counter count={props.quantity} size=\"default\" /> \r\n                        : null}\r\n                </div> */}\r\n\r\n            <div className={`${styles[\"illustration\"]} pl-4 pr-4`}>\r\n                <img alt=\"illustration\" src={props.item.image} />\r\n            </div>\r\n\r\n            <div className={`${styles[\"price-block\"]} pt-1 pb-1`}>\r\n                <span className={`${styles.price} text text_type_digits-medium`}>{props.item.price}</span>\r\n                <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n\r\n            <div className={`${styles[\"item-name\"]} text text_type_main-medium`}>\r\n                {props.item.name}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BurgerIngredientListItem;","import React from 'react';\r\n\r\nimport {\r\n    Tab,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './BurgerIngredients.module.css';\r\nimport stylesScrollable from '../../css/scrollable.module.css';\r\n\r\nimport IDataItem from '../Interfaces/IDataItem';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BurgerIngredientListItem from '../BurgerIngredientListItem/BurgerIngredientListItem';\r\n\r\ninterface BurgerIngredientsProps {\r\n    data: IDataItem[],\r\n    setIdForPopup: (id: string) => void,\r\n    addIngredient: (id: string) => void,\r\n    selectedIngredientsId: string[],\r\n    quantityData: { id: string, quantity: number }[]\r\n};\r\n\r\ninterface BurgerIngredientsState {\r\n    current: string,\r\n    currentItems: IDataItem[]\r\n};\r\n\r\nclass BurgerIngredients extends React.Component<BurgerIngredientsProps, BurgerIngredientsState> {\r\n\r\n    static propTypes = {\r\n        data: PropTypes.arrayOf(PropTypes.shape({\r\n            _id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            type: PropTypes.string,\r\n            proteins: PropTypes.number,\r\n            fat: PropTypes.number,\r\n            carbohydrates: PropTypes.number,\r\n            calories: PropTypes.number,\r\n            price: PropTypes.number,\r\n            image: PropTypes.string,\r\n            image_mobile: PropTypes.string,\r\n            image_large: PropTypes.string,\r\n            __v: PropTypes.number\r\n        })),\r\n        selectedIngredientsId: PropTypes.arrayOf(PropTypes.string),\r\n        setIdForPopup: PropTypes.func,\r\n        addIngredient: PropTypes.func,\r\n        quantityData: PropTypes.arrayOf(PropTypes.shape({\r\n            id: PropTypes.string,\r\n            quantity: PropTypes.number,\r\n        }))\r\n    };\r\n\r\n    state = {\r\n        current: '',\r\n        currentItems: []\r\n    }\r\n\r\n    static getDerivedStateFromProps(props: BurgerIngredientsProps, state: BurgerIngredientsState) {\r\n\r\n        if (state.current !== '') {\r\n            state.currentItems = Array.from(props.data)\r\n                .filter((v: IDataItem, i, a) => { return v.type === state.current });\r\n        } else {\r\n            state.currentItems = props.data;\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    setCurrent = (value: string) => {\r\n        this.setState({\r\n            ...this.state,\r\n            current: value,\r\n            currentItems: Array.from(this.props.data).filter((v: any, i, a) => { return v.type === this.state.current })\r\n        });\r\n    };\r\n\r\n    getUnicleType = (data: IDataItem[]) => {\r\n        return Array.from(data)\r\n            .map(function (v: IDataItem, i, a) { return v.type; })\r\n            .filter(function (v, i, a) { return a.indexOf(v) === i; });\r\n    };\r\n\r\n    getItemsByType = (type: string, data: IDataItem[]) => {\r\n        return data.filter((v: IDataItem) => { return v.type === type });\r\n    };\r\n\r\n    getSelectedCountById = (id: string) => {\r\n\r\n        return Array.from(this.props.selectedIngredientsId).filter((v: string) => v === id).length;\r\n    }\r\n\r\n    getQuantityCountById = (id: string) => {\r\n        return this.props.quantityData.find((v: { id: string, quantity: number }) => v.id === id)?.quantity || 0;\r\n    }\r\n\r\n    getTitleByType = (current: string) => {\r\n\r\n        let title = '';\r\n\r\n        if (current === 'bun') {\r\n            title = 'Булки';\r\n        } else if (current === 'sauce') {\r\n            title = 'Соусы';\r\n        } else if (current === 'main') {\r\n            title = 'Начинка';\r\n        };\r\n\r\n        return title;\r\n    };\r\n\r\n    onClickOnItem = (item: IDataItem) => {\r\n\r\n        this.props.addIngredient(item._id);\r\n        //this.props.setIdForPopup(item._id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles[\"burger-ingredients\"]}>\r\n\r\n                <div className=\"text text_type_main-large mt-10 mb-5\">\r\n                    Соберите бургер\r\n                </div>\r\n\r\n                <div className={styles[\"tab-bar\"] + \" mt-5 mb-10\"}>\r\n                    {['bun', 'sauce', 'main'].map((tab: string, i) => {\r\n                        return (\r\n                            <React.Fragment key={tab}>\r\n                                <Tab value={tab}\r\n                                    active={this.state.current === tab}\r\n                                    onClick={this.setCurrent}\r\n                                >\r\n                                    {this.getTitleByType(tab)}\r\n                                </Tab>\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <ul className={`${styles[\"tab-elements\"]} ${stylesScrollable.scrollable}`}>\r\n\r\n                    {/* TODO задел на то, что типы в исходном json могут быть еще добавлены и не придется переписывать много логики */}\r\n                    {this.getUnicleType(this.state.currentItems).map((type, i) => {\r\n\r\n                        let items = this.getItemsByType(type, this.state.currentItems);\r\n\r\n                        return (\r\n                            <li key={type}>\r\n\r\n                                <div className=\"text text_type_main-medium\">\r\n                                    {this.getTitleByType(type)}\r\n                                </div>\r\n\r\n                                <ul className={`${styles[\"ingredients-list\"]} pt-6 pl-4 pr-4 pb-10`}>\r\n\r\n                                    {items.map((item: IDataItem, i: any) => {\r\n\r\n                                        let count = this.getSelectedCountById(item._id);\r\n                                        let quantity = this.getQuantityCountById(item._id);\r\n\r\n                                        return (\r\n                                            // TODO если вот так, то не ругается на обязательный key  \r\n                                            <li\r\n                                                key={item._id}\r\n                                                className={styles[\"list-item\"]}\r\n                                                onClick={() => this.onClickOnItem(item)}\r\n                                            >\r\n                                                <BurgerIngredientListItem\r\n                                                    item={item}\r\n                                                    quantity={quantity}\r\n                                                    count={count}\r\n                                                    onClickOnItem={this.onClickOnItem}\r\n                                                />\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n\r\n                                </ul>\r\n\r\n                            </li>\r\n                        )\r\n                    })}\r\n\r\n                </ul>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerIngredients;","import React from 'react';\r\n\r\nimport {\r\n    Button,\r\n    CurrencyIcon,\r\n    ConstructorElement,\r\n    DragIcon\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './BurgerConstructor.module.css';\r\nimport stylesScrollable from '../../css/scrollable.module.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction BurgerConstructor(props: any) {\r\n\r\n    const ingredientItems = Array.from(props.selectedIngredientsId)\r\n        .map((v: any) => { return props.data.find((val: any) => { return val._id === v; }) });\r\n\r\n    const bunList = ingredientItems\r\n        .filter((v: any) => { return v.type === 'bun' })\r\n        .filter((v, i, a) => { return a.indexOf(v) === i; });\r\n\r\n    const ingredientList = ingredientItems\r\n        .filter((v: any) => { return v.type !== 'bun' });\r\n\r\n    const total = Array.from(ingredientItems)\r\n        .map((v: any) => { return v.price })\r\n        .reduce((previousValue, currentValue) => previousValue + currentValue, 0);\r\n\r\n    const removeIngredient = (id: string) => {\r\n        props.removeIngredient(id);\r\n    };\r\n\r\n    const checkout = () => {\r\n\r\n        const orderData = {\r\n            orderNumber: Math.floor(Math.random() * 999999),\r\n            selectedIngredientsId: props.selectedIngredientsId,\r\n            total: total\r\n        }\r\n\r\n        props.completeCheckout(orderData);\r\n    }\r\n\r\n    return (\r\n        <div className={styles['burger-constructor'] + ' pt-25 pl-4'}>\r\n\r\n            <ul className={styles['top'] + \" pr-4\"}>\r\n                {bunList.map((item: any, i) => (\r\n                    <li key={`${item._id}_${i}`}>\r\n                        {bunList.length > 1 ? <DragIcon type=\"primary\" /> : null}\r\n                        <ConstructorElement\r\n                            type=\"top\"\r\n                            isLocked={bunList.length === 1}\r\n                            text={item.name}\r\n                            price={item.price}\r\n                            thumbnail={item.image}\r\n                            handleClose={() => removeIngredient(item._id)}\r\n                        />\r\n                    </li>\r\n                ))}\r\n\r\n                {bunList.length === 0 ?\r\n                    <li className=\"text text_type_main-default\" style={{ justifyContent: 'center' }}>\r\n                        Обязательно попробуйте наши булки\r\n                    </li>\r\n                    : null}\r\n\r\n            </ul>\r\n\r\n            <ul className={stylesScrollable.scrollable + \" pr-2 pt-4 pb-4\"}>\r\n                {ingredientList.map((item: any, i: any) => (\r\n\r\n                    <li key={`${item._id}_${i}`}>\r\n                        <DragIcon type=\"primary\" />\r\n                        <ConstructorElement\r\n                            isLocked={false}\r\n                            text={item.name}\r\n                            price={item.price}\r\n                            thumbnail={item.image}\r\n                            handleClose={() => removeIngredient(item._id)}\r\n                        />\r\n                    </li>\r\n\r\n                ))}\r\n\r\n                {ingredientList.length === 0 ?\r\n                    <li className=\"text text_type_main-default\" style={{ justifyContent: 'center' }}>\r\n                        Вы можете выбрать начинку или соус\r\n                    </li>\r\n                    : null}\r\n\r\n            </ul>\r\n\r\n            <ul className={styles.bottom + \" pr-4\"}>\r\n                {bunList.map((item: any, i) => (\r\n                    <li key={`${item._id}_${i}`}>\r\n                        {bunList.length > 1 ? <DragIcon type=\"primary\" /> : null}\r\n                        <ConstructorElement\r\n                            type=\"bottom\"\r\n                            isLocked={bunList.length === 1}\r\n                            text={item.name}\r\n                            price={item.price}\r\n                            thumbnail={item.image}\r\n                            handleClose={() => removeIngredient(item._id)}\r\n                        />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            {bunList.length !== 0 ?\r\n                <div className={styles[\"checkout-block\"] + \" mt-10 pr-4\"}>\r\n                    <div className={styles.total}>\r\n                        <span className=\"text text_type_digits-medium\">\r\n                            {total}\r\n                        </span>\r\n                    </div>\r\n                    <div className={styles[\"currency-icon-wrapper\"] + \" ml-2\"}>\r\n                        <CurrencyIcon type=\"primary\" onClick={undefined} />\r\n                    </div>\r\n                    <div className={styles[\"button-wrapper\"] + \" ml-10\"}>\r\n                        <Button type=\"primary\" size=\"large\" onClick={checkout}>\r\n                            Оформить заказ\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                : null}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nBurgerConstructor.propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.shape({\r\n        _id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        proteins: PropTypes.number,\r\n        fat: PropTypes.number,\r\n        carbohydrates: PropTypes.number,\r\n        calories: PropTypes.number,\r\n        price: PropTypes.number,\r\n        image: PropTypes.string,\r\n        image_mobile: PropTypes.string,\r\n        image_large: PropTypes.string,\r\n        __v: PropTypes.number\r\n    })),\r\n    selectedIngredientsId: PropTypes.arrayOf(PropTypes.string),\r\n    removeIngredient: PropTypes.func,\r\n    completeCheckout: PropTypes.func,\r\n};\r\n\r\nexport default BurgerConstructor;","import styles from './IngredientDetails.module.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction IngredientDetails(props: { element: any }) {\r\n\r\n    return (\r\n        <div className={styles[\"ingredient-info\"]}>\r\n            <div className={styles[\"icon-wrapper\"] + \" mb-4\"}>\r\n                <img src={props.element.image_large} alt=\"icon-wrapper-img\" />\r\n            </div>\r\n            <div className={styles.title + \" text text_type_main-medium mt-4 mb-8\"}>\r\n                {props.element.name}\r\n            </div>\r\n            <ul className={styles[\"composition-list\"] + \" text_color_inactive\"}>\r\n                <li className={styles[\"composition-item\"]}>\r\n                    <div className={styles.title + \" text text_type_main-medium\"}>\r\n                        Калории, ккал\r\n                    </div>\r\n                    <div className={styles.value + \" text text_type_digits-default mt-2\"}>\r\n                        {props.element.calories}\r\n                    </div>\r\n                </li>\r\n                <li className={styles[\"composition-item\"]}>\r\n                    <div className={styles.title + \" text text_type_main-medium\"}>\r\n                        Белки, г\r\n                    </div>\r\n                    <div className={styles.value + \" text text_type_digits-default mt-2\"}>\r\n                        {props.element.proteins}\r\n                    </div>\r\n                </li>\r\n                <li className={styles[\"composition-item\"]}>\r\n                    <div className={styles.title + \" text text_type_main-medium\"}>\r\n                        Жиры, г\r\n                    </div>\r\n                    <div className={styles.value + \" text text_type_digits-default mt-2\"}>\r\n                        {props.element.fat}\r\n                    </div>\r\n                </li>\r\n                <li className={styles[\"composition-item\"]}>\r\n                    <div className={styles.title + \" text text_type_main-medium\"}>\r\n                        Углеводы, г\r\n                    </div>\r\n                    <div className={styles.value + \" text text_type_digits-default mt-2\"}>\r\n                        {props.element.carbohydrates}\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nIngredientDetails.propTypes = {\r\n    element: PropTypes.shape({\r\n        _id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        type: PropTypes.string,\r\n        proteins: PropTypes.number,\r\n        fat: PropTypes.number,\r\n        carbohydrates: PropTypes.number,\r\n        calories: PropTypes.number,\r\n        price: PropTypes.number,\r\n        image: PropTypes.string,\r\n        image_mobile: PropTypes.string,\r\n        image_large: PropTypes.string,\r\n        __v: PropTypes.number\r\n    }),\r\n};\r\n\r\nexport default IngredientDetails;","import React from 'react';\r\n\r\nimport styles from './ModalOverlay.module.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ModalOverlay(props: any) {\r\n\r\n    return (\r\n        <div className={styles[\"modal-background\"]} onClick={props.onClick}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nModalOverlay.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]).isRequired,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nexport default ModalOverlay;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport ModalOverlay from '../ModalOverlay/ModalOverlay';\r\n\r\nimport {\r\n    CloseIcon,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './Modal.module.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends React.Component<{ onCloseModalCallback: any, title: any }, { enable: boolean }> {\r\n\r\n    static propTypes = {\r\n        onCloseModalCallback: PropTypes.func,\r\n        title: PropTypes.string,\r\n    };\r\n\r\n    constructor(props: any) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            enable: true,\r\n        };\r\n\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    closeModal = (e: any) => {\r\n\r\n        e.stopPropagation();\r\n\r\n        if (e.code === 'Escape' || e.currentTarget.className === e.target.className || `${e.currentTarget.className}`.includes(styles['close-icon-wrapper'])) {\r\n            this.props.onCloseModalCallback();\r\n            this.setState({ ...this.state, enable: false });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.closeModal);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.closeModal);\r\n    }\r\n\r\n    render() {\r\n\r\n        const modalRoot: any = document.getElementById(\"for-modal\");\r\n\r\n        return ReactDOM.createPortal(\r\n            this.state.enable ?\r\n                <ModalOverlay onClick={this.closeModal}>\r\n                    <div className={`${styles[\"modal-body\"]} pt-10 pl-10 pr-10 pb-15`}>\r\n                        <div className={styles[\"modal-header\"]}>\r\n                            <span className={styles['modal-title'] + \" text text_type_main-large\"}>\r\n                                {this.props.title}\r\n                            </span>\r\n                            <div className={styles[\"close-icon-wrapper\"]} onClick={this.closeModal}>\r\n                                <CloseIcon type=\"primary\" />\r\n                            </div>\r\n                        </div>\r\n                        {this.props.children}\r\n                    </div>\r\n                </ModalOverlay>\r\n                : null\r\n            ,\r\n            modalRoot\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default Modal;","export default __webpack_public_path__ + \"static/media/done.dc2f52b0.png\";","import React from 'react';\r\n\r\nimport styles from './OrderDetails.module.css';\r\n\r\nimport orderAccpeted from '../../images/order accpeted/popup/done.png';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass OrderDetails extends React.Component<{ orderInfo: { orderNumber: number, selectedIngredientsId: string[], total: number } }, {}> {\r\n\r\n    static propTypes = {\r\n        orderInfo: PropTypes.shape({\r\n            orderNumber: PropTypes.number,\r\n            selectedIngredientsId: PropTypes.arrayOf(PropTypes.string),\r\n            total: PropTypes.number,\r\n        }),\r\n    };\r\n\r\n    render() {\r\n\r\n        let orderNumber = this.props.orderInfo?.orderNumber;\r\n\r\n        return (\r\n            <div className={styles[\"checkout-info\"]}>\r\n                <div className={styles[\"checkout-number\"] + \"text text_type_digits-large\"}>\r\n                    {orderNumber}\r\n                </div>\r\n                <div className={styles[\"checkout-title\"] + \" text text_type_main-medium mt-8\"}>\r\n                    Идентификатор заказа\r\n                </div>\r\n                <div className={styles[\"checkout-icon-wrapper\"] + \" mt-15 mb-15\"}>\r\n                    <img src={orderAccpeted} alt=\"\" />\r\n                </div>\r\n                <div className={styles[\"checkout-status\"] + \" text text_type_main-medium mb-2\"}>\r\n                    Ваш заказ начали готовить\r\n                </div>\r\n                <div className={styles[\"checkout-text\"] + \" text text_type_main-medium text_color_inactive mb-15\"}>\r\n                    Дождитесь готовности на орбитальной станции\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderDetails;","import React from 'react';\r\n\r\nimport AppHeader from '../AppHeader/AppHeader';\r\nimport BurgerIngredients from '../BurgerIngredients/BurgerIngredients';\r\nimport BurgerConstructor from '../BurgerConstructor/BurgerConstructor';\r\nimport IngredientDetails from '../IngredientDetails/IngredientDetails';\r\n\r\nimport json from '../../utils/data.json';\r\n\r\nimport IDataItem from '../Interfaces/IDataItem';\r\n\r\nimport Modal from '../Modal/Modal';\r\n\r\nimport OrderDetails from '../OrderDetails/OrderDetails';\r\n\r\nconst DATA_URL = 'https://norma.nomoreparties.space/api/ingredients';\r\n\r\nclass App extends React.Component<{}, { data: IDataItem[], idForPopup: any, selectedIngredientsId: string[], quantityData: { id: string, quantity: number }[], orderInfo: any }> {\r\n\r\n  constructor(props: any) {\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: json,\r\n      idForPopup: null,\r\n      selectedIngredientsId: (() => {\r\n\r\n        const result = Array.from<string>([]);\r\n\r\n        const defaultBunIngredientId = Array.from(json).filter((v: IDataItem) => { return v.type === 'bun' })[0]._id;\r\n        result.push(defaultBunIngredientId);\r\n        result.push(defaultBunIngredientId);\r\n\r\n        return result;\r\n\r\n      })(),\r\n      quantityData: Array.from(json).map((v: IDataItem) => {\r\n        return {\r\n          id: v._id,\r\n          quantity: Math.floor(Math.random() * 10)\r\n        };\r\n      }),\r\n      orderInfo: null,\r\n    };\r\n\r\n    this.setIdForPopup = this.setIdForPopup.bind(this);\r\n    this.addIngredient = this.addIngredient.bind(this);\r\n    this.removeIngredient = this.removeIngredient.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(DATA_URL)\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка ${res.status}`);\r\n      })\r\n      .then(\r\n        (result) => {\r\n\r\n          const defaultSelectedIngredientsId = Array.from<string>([]);\r\n          \r\n          //let defaultBunIngredientId = result.data.filter((v: IDataItem) => { return v.type === 'bun' })[0]._id;\r\n          //defaultSelectedIngredientsId.push(defaultBunIngredientId);\r\n          //defaultSelectedIngredientsId.push(defaultBunIngredientId);\r\n\r\n          this.setState({ ...this.state, data: Array.from(result.data), selectedIngredientsId: defaultSelectedIngredientsId });\r\n        },\r\n        // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n        // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({ ...this.state, data: json });\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  addIngredient = (id: any) => {\r\n\r\n    // if (this.state.quantityData.find((v) => { return v.id === id })?.quantity === 0) {\r\n    //   this.setState({ ...this.state, idForPopup: id });\r\n    //   return;\r\n    // }\r\n\r\n    let newQuantityData = this.state.quantityData.map((v) => {\r\n\r\n      if (v.id === id) {\r\n        v.quantity = v.quantity - 1;\r\n      }\r\n\r\n      return v;\r\n    });\r\n\r\n    let selectedIngredientsId = Array.from(this.state.selectedIngredientsId);\r\n\r\n    let chosenIngredient = this.state.data.find((v) => v._id === id);\r\n\r\n    if (chosenIngredient?.type === 'bun') {\r\n\r\n      selectedIngredientsId = selectedIngredientsId.filter((v, i, a) => {\r\n        return this.state.data.find((x) => x._id === v)?.type !== 'bun';\r\n      });\r\n\r\n      selectedIngredientsId.push(id);\r\n      selectedIngredientsId.push(id);\r\n\r\n    } else {\r\n      selectedIngredientsId.push(id);\r\n    }\r\n\r\n    this.setState({ ...this.state, selectedIngredientsId: selectedIngredientsId, quantityData: newQuantityData, idForPopup: id });\r\n\r\n  };\r\n\r\n  removeIngredient = (id: any) => {\r\n\r\n    let newQuantityData = this.state.quantityData.map((v) => {\r\n\r\n      if (v.id === id) {\r\n        v.quantity = v.quantity + 1;\r\n      }\r\n\r\n      return v;\r\n    });\r\n\r\n    let selectedIngredientsId = this.state.selectedIngredientsId;\r\n    let index = this.state.selectedIngredientsId.indexOf(id);\r\n    selectedIngredientsId.splice(index, 1);\r\n\r\n    this.setState({ ...this.state, selectedIngredientsId: selectedIngredientsId, quantityData: newQuantityData });\r\n  };\r\n\r\n  setIdForPopup = (id: any) => {\r\n    this.setState({ ...this.state, idForPopup: id });\r\n  };\r\n\r\n  getIngredientById = (id: string) => {\r\n    return this.state.data.find((v: any) => { return v._id === id });\r\n  }\r\n\r\n  clearIdForPopup = () => {\r\n    this.setState({ ...this.state, idForPopup: null });\r\n  }\r\n\r\n  setOrderInfo = (orderData: any) => {\r\n    this.setState({ ...this.state, orderInfo: orderData });\r\n  }\r\n\r\n  clearOrderInfo = () => {\r\n\r\n    let defaultIngredients = [];\r\n\r\n    let defaultBunIngredientId = this.state.data.filter((v: IDataItem) => { return v.type === 'bun' })[0]._id;\r\n\r\n    defaultIngredients.push(defaultBunIngredientId);\r\n    defaultIngredients.push(defaultBunIngredientId);\r\n\r\n    this.setState({ ...this.state, orderInfo: null, selectedIngredientsId: defaultIngredients });\r\n  }\r\n\r\n  mainWrapperStyle = {\r\n    display: 'flex',\r\n    gap: 'calc(var(--offset-base-size) * 10)',\r\n    justifyContent: 'space-evenly',\r\n\r\n    width: 'calc(var(--offset-base-size) * 320)',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto'\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <AppHeader />\r\n\r\n        <section className=\"main\">\r\n          <div className=\"wrapper\" style={this.mainWrapperStyle}>\r\n\r\n            <BurgerIngredients\r\n              data={this.state.data}\r\n              selectedIngredientsId={this.state.selectedIngredientsId}\r\n              setIdForPopup={this.setIdForPopup}\r\n              addIngredient={this.addIngredient}\r\n              quantityData={this.state.quantityData}\r\n            ></BurgerIngredients>\r\n\r\n            <BurgerConstructor\r\n              data={this.state.data}\r\n              selectedIngredientsId={this.state.selectedIngredientsId}\r\n              removeIngredient={this.removeIngredient}\r\n              completeCheckout={this.setOrderInfo}\r\n            ></BurgerConstructor>\r\n\r\n          </div>\r\n        </section>\r\n\r\n        {this.state.orderInfo != null ?\r\n          <Modal title={null} onCloseModalCallback={this.clearOrderInfo}>\r\n            <OrderDetails orderInfo={this.state.orderInfo}></OrderDetails>\r\n          </Modal>\r\n          : null}\r\n\r\n        {this.state.idForPopup != null ?\r\n          <Modal title={'Детали ингридиента'} onCloseModalCallback={this.clearIdForPopup}>\r\n            <IngredientDetails element={this.getIngredientById(this.state.idForPopup)}></IngredientDetails>\r\n          </Modal>\r\n          : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../src/css/index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor\":\"BurgerConstructor_burger-constructor__3rKtC\",\"top\":\"BurgerConstructor_top__hj2qs\",\"bottom\":\"BurgerConstructor_bottom__1NNuQ\",\"checkout-block\":\"BurgerConstructor_checkout-block__3f2fs\",\"total\":\"BurgerConstructor_total__bL-Pa\",\"currency-icon-wrapper\":\"BurgerConstructor_currency-icon-wrapper__2IQb3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkout-info\":\"OrderDetails_checkout-info__1mI_9\",\"checkout-number\":\"OrderDetails_checkout-number__1gR5y\",\"checkout-title\":\"OrderDetails_checkout-title__15Klg\",\"checkout-icon-wrapper\":\"OrderDetails_checkout-icon-wrapper__3gAlt\",\"checkout-status\":\"OrderDetails_checkout-status__2lL88\",\"checkout-text\":\"OrderDetails_checkout-text__3IS3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-body\":\"Modal_modal-body__lQTj_\",\"modal-header\":\"Modal_modal-header__2Oi5e\",\"close-icon-wrapper\":\"Modal_close-icon-wrapper__2lzDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollable\":\"scrollable_scrollable__1gWpr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-info\":\"IngredientDetails_ingredient-info__6loXl\",\"modal-header\":\"IngredientDetails_modal-header__3PDwV\",\"close-icon-wrapper\":\"IngredientDetails_close-icon-wrapper__13OnE\",\"icon-wrapper\":\"IngredientDetails_icon-wrapper__1D8lD\",\"composition-list\":\"IngredientDetails_composition-list__1xeOY\",\"composition-item\":\"IngredientDetails_composition-item__20BeZ\",\"title\":\"IngredientDetails_title__18oGt\",\"value\":\"IngredientDetails_value__2tnGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-background\":\"ModalOverlay_modal-background__qk80X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredients\":\"BurgerIngredients_burger-ingredients__1h0mI\",\"tab-bar\":\"BurgerIngredients_tab-bar__3k5WR\",\"tab-elements\":\"BurgerIngredients_tab-elements__2wyZB\",\"ingredients-list\":\"BurgerIngredients_ingredients-list__34aTE\",\"list-item\":\"BurgerIngredients_list-item__3kXX2\",\"counter-wrapper\":\"BurgerIngredients_counter-wrapper__2yOQI\",\"counter-wrapper-left\":\"BurgerIngredients_counter-wrapper-left__2mKUi\",\"illustration\":\"BurgerIngredients_illustration__3lBLO\",\"price-block\":\"BurgerIngredients_price-block__2tXN0\",\"price\":\"BurgerIngredients_price__1P54H\",\"item-name\":\"BurgerIngredients_item-name__1xCT1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-header\":\"AppHeader_app-header__dUb6i\",\"wrapper\":\"AppHeader_wrapper__1q47x\",\"logo-wrapper\":\"AppHeader_logo-wrapper__vhf3S\",\"navigation-bar\":\"AppHeader_navigation-bar__1ipd5\",\"navigation-link\":\"AppHeader_navigation-link__2YojT\",\"navigation-text\":\"AppHeader_navigation-text__3cjTU\"};"],"sourceRoot":""}